{"ast":null,"code":"var _jsxFileName = \"/Users/sonos/Developer/CM1007LABB2/frontend/src/pages/ImagePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { uploadImage, fetchImage, fetchAllImages } from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport Navbar from '../components/Navbar';\nimport { useNavigate } from 'react-router-dom';\nimport './css/ImagePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImagePage = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [uploadMessage, setUploadMessage] = useState('');\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [imageURL, setImageURL] = useState('');\n  const [error, setError] = useState('');\n  const {\n    user,\n    isPractitioner\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n    if (!isPractitioner) {\n      navigate('/login');\n      return;\n    }\n    const fetchImages = async () => {\n      try {\n        const fetchedImages = await fetchAllImages();\n        setImages(fetchedImages);\n        if (fetchedImages.length > 0) {\n          setSelectedImage(fetchedImages[0]);\n        }\n      } catch (err) {\n        setError(err.message || 'Kunde inte hämta bildlistan.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchImages();\n  }, [user]);\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      setSelectedFile(e.target.files[0]);\n    }\n  };\n\n  // Hantera uppladdning av bild\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setUploadMessage('Ingen fil vald.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      const response = await uploadImage(formData);\n      setUploadMessage('Bild uppladdad framgångsrikt!');\n      console.log('Upload response:', response);\n    } catch (err) {\n      setUploadMessage(err.message || 'Uppladdning misslyckades.');\n    }\n  };\n\n  // Hantera nedladdning av bild\n  const handleDownload = async () => {\n    if (!selectedImage) {\n      setError('Ange ett filnamn för nedladdning.');\n      return;\n    }\n    try {\n      const blob = await fetchImage(selectedImage);\n      const url = URL.createObjectURL(blob);\n      setImageURL(url);\n      setError('');\n    } catch (err) {\n      setError(err.message || 'Nedladdning misslyckades.');\n      setImageURL('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uppladdning av bild\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Ladda upp bild\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), uploadMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nedladdning av bild\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Laddar bilder...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : images.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pickwheel-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"pickwheel\",\n        value: selectedImage,\n        onChange: e => setSelectedImage(e.target.value),\n        children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: image,\n          children: image\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"H\\xE4mta bild\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Inga bilder hittades.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"H\\xE4mtad bild:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageURL,\n        alt: \"Nedladdad\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(ImagePage, \"5eS5Jw4KV6+y527sjJwMOKf0NQw=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = ImagePage;\nexport default ImagePage;\nvar _c;\n$RefreshReg$(_c, \"ImagePage\");","map":{"version":3,"names":["React","useEffect","useState","uploadImage","fetchImage","fetchAllImages","useAuth","Navbar","useNavigate","jsxDEV","_jsxDEV","ImagePage","_s","selectedFile","setSelectedFile","loading","setLoading","uploadMessage","setUploadMessage","images","setImages","selectedImage","setSelectedImage","imageURL","setImageURL","error","setError","user","isPractitioner","navigate","fetchImages","fetchedImages","length","err","message","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","console","log","handleDownload","blob","url","URL","createObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","className","value","map","image","index","style","color","src","alt","maxWidth","height","_c","$RefreshReg$"],"sources":["/Users/sonos/Developer/CM1007LABB2/frontend/src/pages/ImagePage.tsx"],"sourcesContent":["import React, { useEffect, useState, ChangeEvent } from 'react';\nimport { uploadImage, fetchImage, fetchAllImages } from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport Navbar from '../components/Navbar';\nimport { useNavigate } from 'react-router-dom';\nimport './css/ImagePage.css';\n\nconst ImagePage: React.FC = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [uploadMessage, setUploadMessage] = useState<string>('');\n  const [images, setImages] = useState<string[]>([]);\n  const [selectedImage, setSelectedImage] = useState<string>('');\n  const [imageURL, setImageURL] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const { user, isPractitioner } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    } if (!isPractitioner) {\n      navigate('/login');\n      return;\n    }\n    \n    const fetchImages = async () => {\n      try {\n        const fetchedImages = await fetchAllImages();\n        setImages(fetchedImages);\n    \n        if (fetchedImages.length > 0) {\n          setSelectedImage(fetchedImages[0]);\n        }\n      } catch (err: any) {\n        setError(err.message || 'Kunde inte hämta bildlistan.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchImages();\n  }, [user]);\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setSelectedFile(e.target.files[0]);\n    }\n  };\n\n  // Hantera uppladdning av bild\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setUploadMessage('Ingen fil vald.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n\n    try {\n      const response = await uploadImage(formData);\n      setUploadMessage('Bild uppladdad framgångsrikt!');\n      console.log('Upload response:', response);\n    } catch (err: any) {\n      setUploadMessage(err.message || 'Uppladdning misslyckades.');\n    }\n  };\n\n  // Hantera nedladdning av bild\n  const handleDownload = async () => {\n    if (!selectedImage) {\n      setError('Ange ett filnamn för nedladdning.');\n      return;\n    }\n\n    try {\n      const blob = await fetchImage(selectedImage);\n      const url = URL.createObjectURL(blob);\n      setImageURL(url);\n      setError('');\n    } catch (err: any) {\n      setError(err.message || 'Nedladdning misslyckades.');\n      setImageURL('');\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <h2>Uppladdning av bild</h2>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Ladda upp bild</button>\n      {uploadMessage && <p>{uploadMessage}</p>}\n\n      <h2>Nedladdning av bild</h2>\n      {loading ? (\n        <p>Laddar bilder...</p>\n      ) : images.length > 0 ? (\n        <div className=\"pickwheel-container\">\n          <select\n            className=\"pickwheel\"\n            value={selectedImage}\n            onChange={(e) => setSelectedImage(e.target.value)}\n          >\n            {images.map((image, index) => (\n              <option key={index} value={image}>\n                {image}\n              </option>\n            ))}\n          </select>\n          <button onClick={handleDownload}>Hämta bild</button>\n        </div>\n      ) : (\n        <p style={{ color: 'red' }}>Inga bilder hittades.</p>\n      )}\n      {imageURL && (\n        <div>\n          <h3>Hämtad bild:</h3>\n          <img src={imageURL} alt=\"Nedladdad\" style={{ maxWidth: '100%', height: 'auto' }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ImagePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}