{"ast":null,"code":"import React,{useEffect,useState}from'react';import{uploadImage,fetchImage,fetchAllImages}from'../services/api';import{useAuth}from'../contexts/AuthContext';import Navbar from'../components/Navbar';import{useNavigate}from'react-router-dom';import'./css/ImagePage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ImagePage=()=>{const[selectedFile,setSelectedFile]=useState(null);const[loading,setLoading]=useState(true);const[uploadMessage,setUploadMessage]=useState('');const[images,setImages]=useState([]);const[selectedImage,setSelectedImage]=useState('');const[imageURL,setImageURL]=useState('');const[error,setError]=useState('');const{user,isPractitioner}=useAuth();const navigate=useNavigate();useEffect(()=>{if(!user){navigate('/login');return;}if(!isPractitioner){navigate('/login');return;}const fetchImages=async()=>{try{const fetchedImages=await fetchAllImages();setImages(fetchedImages);if(fetchedImages.length>0){setSelectedImage(fetchedImages[0]);}}catch(err){setError(err.message||'Kunde inte hämta bildlistan.');}finally{setLoading(false);}};fetchImages();},[user]);const handleFileChange=e=>{if(e.target.files&&e.target.files.length>0){setSelectedFile(e.target.files[0]);}};// Hantera uppladdning av bild\nconst handleUpload=async()=>{if(!selectedFile){setUploadMessage('Ingen fil vald.');return;}const formData=new FormData();formData.append('image',selectedFile);try{const response=await uploadImage(formData);setUploadMessage('Bild uppladdad framgångsrikt!');console.log('Upload response:',response);}catch(err){setUploadMessage(err.message||'Uppladdning misslyckades.');}};// Hantera nedladdning av bild\nconst handleDownload=async()=>{if(!selectedImage){setError('Ange ett filnamn för nedladdning.');return;}try{const blob=await fetchImage(selectedImage);const url=URL.createObjectURL(blob);setImageURL(url);setError('');}catch(err){setError(err.message||'Nedladdning misslyckades.');setImageURL('');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"Uppladdning av bild\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,children:\"Ladda upp bild\"}),uploadMessage&&/*#__PURE__*/_jsx(\"p\",{children:uploadMessage}),/*#__PURE__*/_jsx(\"h2\",{children:\"Nedladdning av bild\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Laddar bilder...\"}):images.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"pickwheel-container\",children:[/*#__PURE__*/_jsx(\"select\",{className:\"pickwheel\",value:selectedImage,onChange:e=>setSelectedImage(e.target.value),children:images.map((image,index)=>/*#__PURE__*/_jsx(\"option\",{value:image,children:image},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleDownload,children:\"H\\xE4mta bild\"})]}):/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:\"Inga bilder hittades.\"}),imageURL&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"H\\xE4mtad bild:\"}),/*#__PURE__*/_jsx(\"img\",{src:imageURL,alt:\"Nedladdad\",style:{maxWidth:'100%',height:'auto'}})]})]});};export default ImagePage;","map":{"version":3,"names":["React","useEffect","useState","uploadImage","fetchImage","fetchAllImages","useAuth","Navbar","useNavigate","jsx","_jsx","jsxs","_jsxs","ImagePage","selectedFile","setSelectedFile","loading","setLoading","uploadMessage","setUploadMessage","images","setImages","selectedImage","setSelectedImage","imageURL","setImageURL","error","setError","user","isPractitioner","navigate","fetchImages","fetchedImages","length","err","message","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","console","log","handleDownload","blob","url","URL","createObjectURL","children","type","onChange","onClick","className","value","map","image","index","style","color","src","alt","maxWidth","height"],"sources":["/Users/sonos/Developer/CM1007LABB2/frontend/src/pages/ImagePage.tsx"],"sourcesContent":["import React, { useEffect, useState, ChangeEvent } from 'react';\nimport { uploadImage, fetchImage, fetchAllImages } from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport Navbar from '../components/Navbar';\nimport { useNavigate } from 'react-router-dom';\nimport './css/ImagePage.css';\n\nconst ImagePage: React.FC = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [uploadMessage, setUploadMessage] = useState<string>('');\n  const [images, setImages] = useState<string[]>([]);\n  const [selectedImage, setSelectedImage] = useState<string>('');\n  const [imageURL, setImageURL] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const { user, isPractitioner } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    } if (!isPractitioner) {\n      navigate('/login');\n      return;\n    }\n    \n    const fetchImages = async () => {\n      try {\n        const fetchedImages = await fetchAllImages();\n        setImages(fetchedImages);\n    \n        if (fetchedImages.length > 0) {\n          setSelectedImage(fetchedImages[0]);\n        }\n      } catch (err: any) {\n        setError(err.message || 'Kunde inte hämta bildlistan.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchImages();\n  }, [user]);\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setSelectedFile(e.target.files[0]);\n    }\n  };\n\n  // Hantera uppladdning av bild\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setUploadMessage('Ingen fil vald.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n\n    try {\n      const response = await uploadImage(formData);\n      setUploadMessage('Bild uppladdad framgångsrikt!');\n      console.log('Upload response:', response);\n    } catch (err: any) {\n      setUploadMessage(err.message || 'Uppladdning misslyckades.');\n    }\n  };\n\n  // Hantera nedladdning av bild\n  const handleDownload = async () => {\n    if (!selectedImage) {\n      setError('Ange ett filnamn för nedladdning.');\n      return;\n    }\n\n    try {\n      const blob = await fetchImage(selectedImage);\n      const url = URL.createObjectURL(blob);\n      setImageURL(url);\n      setError('');\n    } catch (err: any) {\n      setError(err.message || 'Nedladdning misslyckades.');\n      setImageURL('');\n    }\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <h2>Uppladdning av bild</h2>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Ladda upp bild</button>\n      {uploadMessage && <p>{uploadMessage}</p>}\n\n      <h2>Nedladdning av bild</h2>\n      {loading ? (\n        <p>Laddar bilder...</p>\n      ) : images.length > 0 ? (\n        <div className=\"pickwheel-container\">\n          <select\n            className=\"pickwheel\"\n            value={selectedImage}\n            onChange={(e) => setSelectedImage(e.target.value)}\n          >\n            {images.map((image, index) => (\n              <option key={index} value={image}>\n                {image}\n              </option>\n            ))}\n          </select>\n          <button onClick={handleDownload}>Hämta bild</button>\n        </div>\n      ) : (\n        <p style={{ color: 'red' }}>Inga bilder hittades.</p>\n      )}\n      {imageURL && (\n        <div>\n          <h3>Hämtad bild:</h3>\n          <img src={imageURL} alt=\"Nedladdad\" style={{ maxWidth: '100%', height: 'auto' }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ImagePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}