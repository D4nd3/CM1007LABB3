{"ast":null,"code":"import _objectSpread from\"/Users/sonos/Developer/CM1007LABB2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import Navbar from'../components/Navbar';import{useAuth}from'../contexts/AuthContext';import{fetchAllStaff,fetchAllUsers,sendMessage,getMessages,updateIsRead}from'../services/api';import'./css/MessagePage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MessagePage=()=>{const{user}=useAuth();const navigate=useNavigate();const[staffList,setStaffList]=useState([]);const[usersList,setUsersList]=useState([]);const[selectedStaff,setSelectedStaff]=useState(null);const[messageText,setMessageText]=useState('');const[error,setError]=useState(null);const[successMessage,setSuccessMessage]=useState(null);const[messages,setMessages]=useState([]);const[expandedMessageId,setExpandedMessageId]=useState(null);useEffect(()=>{if(!user){navigate('/login');// Navigera till inloggningssidan\nreturn;}const loadData=async()=>{try{if(user.role==='PATIENT'){const staffResponse=await fetchAllStaff();setStaffList(staffResponse);}else if(user.role==='PRACTITIONER'||user.role==='OTHER'){const usersResponse=await fetchAllUsers();setUsersList(usersResponse);}const messageResponse=await getMessages(user.id);setMessages(messageResponse);}catch(err){console.error('Error loading data:',err);setError('Kunde inte ladda data. Försök igen senare.');}};loadData();},[user]);const handleSubmit=async e=>{e.preventDefault();setError(null);setSuccessMessage(null);if(!selectedStaff||!messageText){setError('Vänligen välj en person och skriv ett meddelande.');return;}if(!user){setError('Inloggad användare saknas. Logga in igen.');return;}const messageRequest={senderId:user.id,receiverId:selectedStaff,text:messageText};try{const response=await sendMessage(messageRequest);setSuccessMessage('Meddelandet skickades framgångsrikt!');setMessageText('');setSelectedStaff(null);const updatedMessages=await getMessages(user.id);setMessages(updatedMessages);}catch(err){console.error('Error sending message:',err);setError('Kunde inte skicka meddelandet. Försök igen senare.');}};const handleExpandMessage=async msg=>{if(msg.receiverId===(user===null||user===void 0?void 0:user.id)&&!msg.isRead){try{await updateIsRead(msg.id);const updatedMessages=messages.map(message=>message.id===msg.id?_objectSpread(_objectSpread({},message),{},{isRead:true}):message);setMessages(updatedMessages);}catch(err){console.error('Error updating read status:',err);setError('Kunde inte uppdatera meddelandets lässtatus.');}}setExpandedMessageId(expandedMessageId===msg.id?null:msg.id);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"Skicka Meddelande\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),successMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:successMessage}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"V\\xE4lj Personal:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedStaff||'',onChange:e=>setSelectedStaff(Number(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"V\\xE4lj en person...\"}),((user===null||user===void 0?void 0:user.role)==='PATIENT'?staffList:usersList).map(person=>/*#__PURE__*/_jsxs(\"option\",{value:person.id,children:[person.fullName,\" (\",person.role,\")\"]},person.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Meddelande:\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Skriv ditt meddelande h\\xE4r...\",value:messageText,onChange:e=>setMessageText(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Skicka\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Befintliga Meddelanden\"}),messages.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"Inga meddelanden.\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"message-list\",children:messages.map(msg=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleExpandMessage(msg),children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.senderId===(user===null||user===void 0?void 0:user.id)?'Du skickade till':\"\".concat(msg.senderName,\" skickade till\"),\":\",' ',msg.receiverId===(user===null||user===void 0?void 0:user.id)?'dig':\"\".concat(msg.receiverName)]}),!msg.isRead&&/*#__PURE__*/_jsx(\"span\",{className:\"read-status \".concat(msg.senderId===(user===null||user===void 0?void 0:user.id)?'red':'green')})]}),expandedMessageId===msg.id&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:msg.text}),msg.timestamp?new Date(Number(msg.timestamp)).toLocaleString()// Konvertera BigInt till Number\n:'Tidsstämpel saknas']})]},msg.id))})]});};export default MessagePage;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Navbar","useAuth","fetchAllStaff","fetchAllUsers","sendMessage","getMessages","updateIsRead","jsx","_jsx","jsxs","_jsxs","MessagePage","user","navigate","staffList","setStaffList","usersList","setUsersList","selectedStaff","setSelectedStaff","messageText","setMessageText","error","setError","successMessage","setSuccessMessage","messages","setMessages","expandedMessageId","setExpandedMessageId","loadData","role","staffResponse","usersResponse","messageResponse","id","err","console","handleSubmit","e","preventDefault","messageRequest","senderId","receiverId","text","response","updatedMessages","handleExpandMessage","msg","isRead","map","message","_objectSpread","children","className","onSubmit","value","onChange","Number","target","disabled","person","fullName","placeholder","required","type","length","onClick","concat","senderName","receiverName","timestamp","Date","toLocaleString"],"sources":["/Users/sonos/Developer/CM1007LABB2/frontend/src/pages/MessagePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport { useAuth } from '../contexts/AuthContext';\nimport { fetchAllStaff, fetchAllUsers, sendMessage, getMessages, updateIsRead } from '../services/api';\nimport { UserResponse } from '../types/responses/UserResponse';\nimport { SendMessageRequest } from '../types/requests/SendMessageRequest';\nimport { SendMessageResponse } from '../types/responses/SendMessageResponse';\nimport './css/MessagePage.css';\n\nconst MessagePage: React.FC = () => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [staffList, setStaffList] = useState<UserResponse[]>([]);\n  const [usersList, setUsersList] = useState<UserResponse[]>([]);\n  const [selectedStaff, setSelectedStaff] = useState<number | null>(null);\n  const [messageText, setMessageText] = useState<string>('');\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [messages, setMessages] = useState<SendMessageResponse[]>([]);\n  const [expandedMessageId, setExpandedMessageId] = useState<number | null>(null);\n\n  useEffect(() => {\n    if(!user){\n        navigate('/login'); // Navigera till inloggningssidan\n      return;\n    }\n    const loadData = async () => {\n        try {\n        if (user.role === 'PATIENT') {\n            const staffResponse = await fetchAllStaff();\n            setStaffList(staffResponse);\n        } else if (user.role === 'PRACTITIONER' || user.role === 'OTHER') {\n            const usersResponse = await fetchAllUsers();\n            setUsersList(usersResponse);\n        }\n    \n        const messageResponse = await getMessages(user.id);\n        setMessages(messageResponse);\n        } catch (err) {\n        console.error('Error loading data:', err);\n        setError('Kunde inte ladda data. Försök igen senare.');\n        }\n    };\n    loadData();\n  }, [user]);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setError(null);\n    setSuccessMessage(null);\n\n    if (!selectedStaff || !messageText) {\n      setError('Vänligen välj en person och skriv ett meddelande.');\n      return;\n    }\n\n    if (!user) {\n      setError('Inloggad användare saknas. Logga in igen.');\n      return;\n    }\n\n    const messageRequest: SendMessageRequest = {\n      senderId: user.id,\n      receiverId: selectedStaff,\n      text: messageText\n    };\n\n    try {\n      const response = await sendMessage(messageRequest);\n      setSuccessMessage('Meddelandet skickades framgångsrikt!');\n      setMessageText('');\n      setSelectedStaff(null);\n      const updatedMessages = await getMessages(user.id);\n      setMessages(updatedMessages);\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Kunde inte skicka meddelandet. Försök igen senare.');\n    }\n  };\n\n  const handleExpandMessage = async (msg: SendMessageResponse) => {\n    if (msg.receiverId === user?.id && !msg.isRead) {\n      try {\n        await updateIsRead(msg.id);\n        const updatedMessages = messages.map((message) =>\n          message.id === msg.id ? { ...message, isRead: true } : message\n        );\n        setMessages(updatedMessages);\n      } catch (err) {\n        console.error('Error updating read status:', err);\n        setError('Kunde inte uppdatera meddelandets lässtatus.');\n      }\n    }\n    setExpandedMessageId(expandedMessageId === msg.id ? null : msg.id);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <h2>Skicka Meddelande</h2>\n      {error && <p className=\"error-message\">{error}</p>}\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Välj Personal:</label>\n          <select\n            value={selectedStaff || ''}\n            onChange={(e) => setSelectedStaff(Number(e.target.value))}\n          >\n            <option value=\"\" disabled>\n              Välj en person...\n            </option>\n            {(user?.role === 'PATIENT' ? staffList : usersList).map((person) => (\n            <option key={person.id} value={person.id}>\n                {person.fullName} ({person.role})\n            </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <label>Meddelande:</label>\n          <textarea\n            placeholder=\"Skriv ditt meddelande här...\"\n            value={messageText}\n            onChange={(e) => setMessageText(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Skicka</button>\n      </form>\n\n      <h3>Befintliga Meddelanden</h3>\n      {messages.length === 0 ? (\n        <p>Inga meddelanden.</p>\n      ) : (\n        <ul className=\"message-list\">\n          {messages.map((msg) => (\n            <li key={msg.id}>\n              <div onClick={() => handleExpandMessage(msg)}>\n                <strong>\n                  {msg.senderId === user?.id ? 'Du skickade till' : `${msg.senderName} skickade till`}:{' '}\n                  {msg.receiverId === user?.id ? 'dig' : `${msg.receiverName}`}\n                </strong>\n                {!msg.isRead && (\n                  <span className={`read-status ${msg.senderId === user?.id ? 'red' : 'green'}`}></span>\n                )}\n              </div>\n              {expandedMessageId === msg.id && (\n                <div>\n                  <p>{msg.text}</p>\n                  {msg.timestamp\n                ? new Date(Number(msg.timestamp)).toLocaleString() // Konvertera BigInt till Number\n                    : 'Tidsstämpel saknas'}\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MessagePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}