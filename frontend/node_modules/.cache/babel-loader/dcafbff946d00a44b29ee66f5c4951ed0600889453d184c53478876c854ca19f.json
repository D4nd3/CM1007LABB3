{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(()=>JSON.parse(localStorage.getItem('user')||'null')// Ladda från localStorage vid start\n);const login=userData=>{setUser(userData);localStorage.setItem('user',JSON.stringify(userData));// Spara till localStorage\n};const logout=()=>{setUser(null);localStorage.removeItem('user');// Rensa localStorage\n};const isAdmin=(user===null||user===void 0?void 0:user.role)==='ADMIN';const isPatient=(user===null||user===void 0?void 0:user.role)==='PATIENT';const isStaff=(user===null||user===void 0?void 0:user.role)==='PRACTITIONER'||(user===null||user===void 0?void 0:user.role)==='OTHER';const isPractitioner=(user===null||user===void 0?void 0:user.role)==='PRACTITIONER';return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,isAuthenticated:!!user,login,logout,isAdmin,isPatient,isStaff,isPractitioner},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","JSON","parse","localStorage","getItem","login","userData","setItem","stringify","logout","removeItem","isAdmin","role","isPatient","isStaff","isPractitioner","Provider","value","isAuthenticated","useAuth","context","Error"],"sources":["/Users/sonos/Developer/CM1007LABB2/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from 'react';\nimport { UserResponse } from '../types/responses';\n\n\ninterface AuthContextType {\n  user: UserResponse | null;\n  isAuthenticated: boolean;\n  login: (userData: UserResponse) => void;\n  logout: () => void;\n  isAdmin: boolean\n  isPatient: boolean;\n  isStaff: boolean;\n  isPractitioner: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<UserResponse | null>(\n    () => JSON.parse(localStorage.getItem('user') || 'null') // Ladda från localStorage vid start\n  );\n\n  const login = (userData: UserResponse) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData)); // Spara till localStorage\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user'); // Rensa localStorage\n  };\n\n  const isAdmin = user?.role === 'ADMIN';\n  const isPatient = user?.role === 'PATIENT';\n  const isStaff = user?.role === 'PRACTITIONER' || user?.role === 'OTHER';\n  const isPractitioner = user?.role === 'PRACTITIONER';\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated: !!user, login , logout, isAdmin, isPatient, isStaff, isPractitioner }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAe9E,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAA8BM,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,YAAY,CAAGC,IAAA,EAA2C,IAA1C,CAAEC,QAAkC,CAAC,CAAAD,IAAA,CAChE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAC9B,IAAMW,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAI,MAAM,CAAE;AAC3D,CAAC,CAED,KAAM,CAAAC,KAAK,CAAIC,QAAsB,EAAK,CACxCN,OAAO,CAACM,QAAQ,CAAC,CACjBH,YAAY,CAACI,OAAO,CAAC,MAAM,CAAEN,IAAI,CAACO,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAE;AAC1D,CAAC,CAED,KAAM,CAAAG,MAAM,CAAGA,CAAA,GAAM,CACnBT,OAAO,CAAC,IAAI,CAAC,CACbG,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC,CAAE;AACnC,CAAC,CAED,KAAM,CAAAC,OAAO,CAAG,CAAAZ,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEa,IAAI,IAAK,OAAO,CACtC,KAAM,CAAAC,SAAS,CAAG,CAAAd,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEa,IAAI,IAAK,SAAS,CAC1C,KAAM,CAAAE,OAAO,CAAG,CAAAf,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEa,IAAI,IAAK,cAAc,EAAI,CAAAb,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEa,IAAI,IAAK,OAAO,CACvE,KAAM,CAAAG,cAAc,CAAG,CAAAhB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEa,IAAI,IAAK,cAAc,CAEpD,mBACEnB,IAAA,CAACC,WAAW,CAACsB,QAAQ,EAACC,KAAK,CAAE,CAAElB,IAAI,CAAEmB,eAAe,CAAE,CAAC,CAACnB,IAAI,CAAEM,KAAK,CAAGI,MAAM,CAAEE,OAAO,CAAEE,SAAS,CAAEC,OAAO,CAAEC,cAAe,CAAE,CAAAjB,QAAA,CACzHA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAqB,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAG7B,UAAU,CAACG,WAAW,CAAC,CACvC,GAAI,CAAC0B,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}