{"ast":null,"code":"var _jsxFileName = \"/Users/sonos/Developer/CM1007LABB2/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => JSON.parse(localStorage.getItem('user') || 'null') // Ladda från localStorage vid start\n  );\n  const login = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData)); // Spara till localStorage\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user'); // Rensa localStorage\n  };\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'ADMIN';\n  const isPatient = (user === null || user === void 0 ? void 0 : user.role) === 'PATIENT';\n  const isStaff = (user === null || user === void 0 ? void 0 : user.role) === 'PRACTITIONER' || (user === null || user === void 0 ? void 0 : user.role) === 'OTHER';\n  const isPractitioner = (user === null || user === void 0 ? void 0 : user.role) === 'PRACTITIONER';\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated: !!user,\n      login,\n      logout,\n      isAdmin,\n      isPatient,\n      isStaff,\n      isPractitioner\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"siyse0MrjxjkuEioWiywYIK7prI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","JSON","parse","localStorage","getItem","login","userData","setItem","stringify","logout","removeItem","isAdmin","role","isPatient","isStaff","isPractitioner","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/sonos/Developer/CM1007LABB2/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from 'react';\nimport { UserResponse } from '../types/responses';\n\n\ninterface AuthContextType {\n  user: UserResponse | null;\n  isAuthenticated: boolean;\n  login: (userData: UserResponse) => void;\n  logout: () => void;\n  isAdmin: boolean\n  isPatient: boolean;\n  isStaff: boolean;\n  isPractitioner: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<UserResponse | null>(\n    () => JSON.parse(localStorage.getItem('user') || 'null') // Ladda från localStorage vid start\n  );\n\n  const login = (userData: UserResponse) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData)); // Spara till localStorage\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user'); // Rensa localStorage\n  };\n\n  const isAdmin = user?.role === 'ADMIN';\n  const isPatient = user?.role === 'PATIENT';\n  const isStaff = user?.role === 'PRACTITIONER' || user?.role === 'OTHER';\n  const isPractitioner = user?.role === 'PRACTITIONER';\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated: !!user, login , logout, isAdmin, isPatient, isStaff, isPractitioner }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe9E,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAC9B,MAAMW,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMC,KAAK,GAAIC,QAAsB,IAAK;IACxCN,OAAO,CAACM,QAAQ,CAAC;IACjBH,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBT,OAAO,CAAC,IAAI,CAAC;IACbG,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,MAAMC,OAAO,GAAG,CAAAZ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,IAAI,MAAK,OAAO;EACtC,MAAMC,SAAS,GAAG,CAAAd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,IAAI,MAAK,SAAS;EAC1C,MAAME,OAAO,GAAG,CAAAf,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,IAAI,MAAK,cAAc,IAAI,CAAAb,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,IAAI,MAAK,OAAO;EACvE,MAAMG,cAAc,GAAG,CAAAhB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,IAAI,MAAK,cAAc;EAEpD,oBACEnB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEmB,eAAe,EAAE,CAAC,CAACnB,IAAI;MAAEM,KAAK;MAAGI,MAAM;MAAEE,OAAO;MAAEE,SAAS;MAAEC,OAAO;MAAEC;IAAe,CAAE;IAAAlB,QAAA,EACzHA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,EAAA,CAzBWF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA2BzB,OAAO,MAAM4B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGnC,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI,CAACgC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}